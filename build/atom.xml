<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Danger Cove]]></title>
  <link href="http://www.dangercove.com/atom.xml" rel="self"/>
  <link href="http://www.dangercove.com/"/>
  <updated>2015-08-24T11:27:56+02:00</updated>
  <id>http://www.dangercove.com/</id>
  <author>
    <name><![CDATA[Danger Cove]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Control Your AirPlay Speakers Remotely With Porthole]]></title>
    <link href="http://www.dangercove.com/blog/2015/04/28/remote-controlling-porthole/"/>
    <updated>2015-04-28T12:00:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2015/04/28/remote-controlling-porthole</id>
    <content type="html"><![CDATA[<p>Being able to remotely control my AirPlay setup from the comfort of my couch has been at the top of my feature request list forever, so I&#8217;m very excited to say that <a href="http://www.getporthole.com/remote">it&#8217;s now a feature in Porthole</a>!</p>

<p><img src="http://www.dangercove.com/images/content/porthole-remote.jpg" alt="Porthole Remote" /></p>

<!-- more -->


<p>I&#8217;ve added Porthole to the collection of apps that work with the remarkable Unified Remote. Unified Remote is an app made by Unified Intents that allows you to remotely control many features of your Mac <em>and</em> a whole bunch of third-party apps, now including Porthole.</p>

<p>The remote lets you turn AirPlay speakers on and off, toggle the computer speaker and adjust the main volume from any iOS, Android and Windows phone or tablet that&#8217;s on the same wireless network as your Mac.</p>

<div class="text-center">
<a href="http://www.getporthole.com" class="btn btn-large btn-success">Get Porthole!</a>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[More Features For Denied]]></title>
    <link href="http://www.dangercove.com/blog/2015/01/08/more-features-for-denied/"/>
    <updated>2015-01-08T10:00:00+01:00</updated>
    <id>http://www.dangercove.com/blog/2015/01/08/more-features-for-denied</id>
    <content type="html"><![CDATA[<p><img src="http://www.dangercove.com/images/content/denied-macbook-now-playing-with-caption.jpg" alt="Add songs from the Now Playing info" /></p>

<p><a href="http://www.getdenied.com">Denied version 1.2.1</a> is out today, but last month I shipped a major update that I haven&#8217;t posted about on here. It introduces awesome new features and a radical new design. Here&#8217;s a short list:</p>

<ul>
<li>Skipping songs that contain explicit lyrics.</li>
<li>Skipping songs that youâ€™ve heard before in the past few hours.</li>
<li>Seeing which song is currently playing and..</li>
<li>Adding rules straight from the Now Playing information.</li>
</ul>


<p>Also:</p>

<ul>
<li>The rules adding/editing interface has been completely revised.</li>
<li>Cool animations have been added.</li>
<li>Bugs have been fixed and things tweaked.</li>
</ul>


<!-- more -->


<p>The best animation is probably the one you&#8217;ll never see. It happens when you pause or un-pause your music player.</p>

<p><img src="http://www.dangercove.com/images/content/denied-animation-experiment.gif" alt="Animations in the latest build of Denied" /></p>

<p>The gif above also shows the flow of adding a new rule based on the song that&#8217;s currently playing. The final version shows the amount of rules you&#8217;ve setup. Pretty neat.</p>

<p>Skipping repeating songs and tracks that contains explicit content are the two major new features. Both are disabled by default, but introduce powerful new methods to passively skip over music you don&#8217;t want to hear.</p>

<div class="text-center">
<a href="http://www.getdenied.com" class="btn btn-large btn-success">Get Denied!</a>
</div>


<p>With the repeating song feature, you can set a timeout (between 30 minutes and 24 hours) and Denied will automatically skip over songs that have been played before in the set amount of time. I love this option when I listen to some Spotify Radio stations that have a limited amount of tracks.</p>

<p><img src="http://www.dangercove.com/images/content/denied-macbook-skip-repeating-with-caption.jpg" alt="Automatically skip repeating songs" /></p>

<p>The explicit content filter checks if songs are labeled as containing explicit lyrics. If you&#8217;re listening with kids, or other sensitive ears, this feature will surely come in handy. Note that while it works with Spotify, Rdio and iTunes, the song has to be available in Spotify&#8217;s library and you need to be connected to the internet.</p>

<p><img src="http://www.dangercove.com/images/content/denied-macbook-skip-explicit-with-caption.jpg" alt="Automatically skip explicit songs" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ready for Yosemite]]></title>
    <link href="http://www.dangercove.com/blog/2014/10/17/ready-for-yosemite/"/>
    <updated>2014-10-17T10:22:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2014/10/17/ready-for-yosemite</id>
    <content type="html"><![CDATA[<p>Apple released <a href="https://itunes.apple.com/us/app/os-x-yosemite/id915041082">OS X version 10.10</a> yesterday. It&#8217;s a free update and I think most of you will want to upgrade as soon as you get the chance.</p>

<p>All Danger Cove apps have been tested and work beautifully with OS X Yosemite. So, don&#8217;t let <a href="http://www.getdenied.com">Denied</a>, <a href="http://www.getporthole.com">Porthole</a>, <a href="http://www.dangercove.com/airvlc">AirVLC</a>, <a href="http://www.dangercove.com/coucou">coucou</a> or <a href="reign">Reign</a> hold you back and have fun checking out all new features Apple has added!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Denied Is On Sale And Now Supports Rdio &amp; iTunes]]></title>
    <link href="http://www.dangercove.com/blog/2014/10/07/denied-now-supports-rdio-and-itunes/"/>
    <updated>2014-10-07T14:48:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2014/10/07/denied-now-supports-rdio-and-itunes</id>
    <content type="html"><![CDATA[<p>Denied&#8217;s version 1.1.0 is available for download. In addition to Spotify, it now automatically skip tracks in Rdio and iTunes as well! It also features an improved add-rule-flow that lets you create new rules much faster.</p>

<p>Get the update from the <a href="http://www.getdenied.com/appstore">Mac App Store</a>, or by checking for updates in <a href="http://www.getdenied.com">the trial version</a>.</p>

<p>Denied is on sale for a limited time for just <a href="http://www.getdenied.com/appstore">$2.99</a>, down from $6.99!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Denied, skip terrible music]]></title>
    <link href="http://www.dangercove.com/blog/2014/09/17/denied-skip-terrible-music/"/>
    <updated>2014-09-17T12:45:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2014/09/17/denied-skip-terrible-music</id>
    <content type="html"><![CDATA[<p>The wait is over! No longer do you need to listen to artists you can&#8217;t stand on Spotify. And even better: you can automatically skip those annoying skits and bonus tracks on otherwise great albums.</p>

<p>Denied for Mac is <a href="http://www.getdenied.com">now available</a>!</p>

<p>Get your copy through the website or the Mac App Store and enjoy Top 40 playlists, the Christmas season and Spotify radio without the songs that you dislike.</p>

<p>Enjoy and let me know what you think on Twitter: <a href="https://www.twitter.com/deniedapp">@deniedapp</a>.</p>

<div class="thumbnail">
<img src="http://www.dangercove.com/images/content/denied-rulesoverview@2x.jpg" title="Denied rules overview" alt="Denied rules overview">
</div>




<!-- more -->




<div class="text-center">
<a href="http://www.getdenied.com" class="btn btn-large btn-success">Get Denied!</a>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reign in Your Bonjour Bookmarks]]></title>
    <link href="http://www.dangercove.com/blog/2014/08/22/reign-in-your-bonjour-bookmarks/"/>
    <updated>2014-08-22T13:38:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2014/08/22/reign-in-your-bonjour-bookmarks</id>
    <content type="html"><![CDATA[<p>A new version of Reign just came out. Yes, really. And it even has a few cool new features (not a new theme though, sorry). I want talk one of them here: having Reign show up in Safari&#8217;s Bonjour Bookmarks or Favorites.</p>

<div class="thumbnail">
<img src="http://www.dangercove.com/images/adventures/reign/screenshots/bonjour-bookmarks.jpg" title="Reign servers on the network automatically show up!" alt="Reign servers on the network automatically show up!">
</div>


<p>There&#8217;s a magic menu in Safari, disabled per default, that will automatically show websites that announce themselves over <a href="http://en.wikipedia.org/wiki/Bonjour_(software">Bonjour</a>. Bonjour is basically &#8220;a group of technologies that includes service discovery, address assignment, and hostname resolution&#8221;. In short: it will let your Reign server show up in anyone&#8217;s Safari, without needing to install Reign! Here&#8217;s how to set it up.</p>

<!-- more -->




<div class="thumbnail">
<img src="http://www.dangercove.com/images/adventures/reign/screenshots/safari-preferences.jpg" title="Open Safari's preferences" alt="Open Safari's preferences">
<div class="caption">
First open Safari&#8217;s preferences.
</div>
</div>




<div class="thumbnail">
<img src="http://www.dangercove.com/images/adventures/reign/screenshots/enable-bonjour.jpg" title="Click Advanced and then enable Bonjour Favorites" alt="Click Advanced and then enable Bonjour Favorites">
<div class="caption">
Click Advanced and then enable Bonjour Favorites.
</div>
</div>




<div class="thumbnail">
<img src="http://www.dangercove.com/images/adventures/reign/screenshots/show-favorites.jpg" title="Enable the Favorites bar" alt="Enable the Favorites bar">
<div class="caption">
Enable the Favorites bar.
</div>
</div>




<div class="thumbnail">
<img src="http://www.dangercove.com/images/adventures/reign/screenshots/bonjour-bookmarks.jpg" title="Reign servers on the network automatically show up!" alt="Reign servers on the network automatically show up!">
<div class="caption">
Reign servers on the network automatically show up!
</div>
</div>




<div class="text-center">
<a href="http://www.dangercove.com/reign" class="btn btn-large btn-success">Get Reign for Spotify!</a>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Shazam's Mac App Through Porthole to Match Songs Without Recording Every Sound in the Room]]></title>
    <link href="http://www.dangercove.com/blog/2014/07/31/get-shazams-mac-app-to-match-songs-without-recording-every-sound/"/>
    <updated>2014-07-31T09:26:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2014/07/31/get-shazams-mac-app-to-match-songs-without-recording-every-sound</id>
    <content type="html"><![CDATA[<p>Shazam, the amazing music recognizing service, <a href="http://www.shazam.com">released a Mac app today</a>. It listens for audio around your Mac and tries to match it to music and tv series. Pretty awesome!</p>

<p>I don&#8217;t particularly like the idea of having an app listening to every sound in my office/home though. So I did some testing and it seems it selects the default audio device for recording. Normally this is your microphone, which obviously picks up any sound in the room.</p>

<div class="thumbnail">
<img src="http://www.dangercove.com/images/content/porthole-shazam.jpg" title="Shazam for Mac" alt="Shazam for Mac">
</div>


<p>If you&#8217;re streaming to AirPlay speakers with <a href="http://www.getporthole.com">Porthole</a> however, the default recording device is <a href="http://cycling74.com/products/soundflower/">Soundflower</a>. Soundflower only records all the audio that would normally come out of your Mac&#8217;s speakers. This feels a lot more private and comfortable to me.</p>

<p>Here&#8217;s how to set it up:</p>

<!-- more -->


<ol>
<li><a href="https://itunes.apple.com/us/app/shazam/id897118787">Download Shazam</a>;</li>
<li>Quit Shazam if it&#8217;s already running (important, don&#8217;t skip this!);</li>
<li><a href="http://www.getporthole.com/download">Download Porthole</a>;</li>
<li>Start streaming with Porthole;</li>
<li>Launch Shazam.</li>
</ol>


<p>If you stop streaming, Shazam will still be listening to Soundflower&#8217;s output, which outputs nothing. As an added bonus, because the sound comes in crystal clear, Shazam might be able to match it a little faster ;).</p>

<p>Do note that Shazam might change this behavior in the future and force it to use the microphone, but for now this seems to be a more private way to use Shazam on your Mac. Also remember that if you restart Shazam (or run it at login) it will default to using the microphone.</p>

<div class="text-center">
<a href="http://www.getporthole.com" class="btn btn-large btn-success">Get Porthole!</a>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Porthole is now scriptable]]></title>
    <link href="http://www.dangercove.com/blog/2014/06/27/porthole-is-now-scriptable/"/>
    <updated>2014-06-27T20:15:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2014/06/27/porthole-is-now-scriptable</id>
    <content type="html"><![CDATA[<p>Porthole version 1.7.0 came out two days ago. It introduces scripting, a feature that&#8217;s been requested more than once.</p>

<p>Being able to use AppleScript to control Porthole means that you can automate and toggle certain functions of Porthole without going through the interface. Which is pretty awesome!</p>

<div class="thumbnail">
<img src="http://www.dangercove.com/images/content/porthole-applescripteditor.jpg" title="Script Porthole using AppleScript" alt="Script Porthole using AppleScript">
</div>


<p>Update to the latest version from within the app, or <a href="http://www.getporthole.com/download">download</a> a fresh copy from the website. Then read <a href="http://www.getporthole.com/scripting">the tutorial on scripting</a> to get started.</p>

<!-- more -->




<div class="text-center">
<a href="http://www.getporthole.com" class="btn btn-large btn-success">Get Porthole!</a>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Easily add acknowledgments to your Xcode projects]]></title>
    <link href="http://www.dangercove.com/blog/2014/05/29/easily-add-acknowledgments-to-your-xcode-projects/"/>
    <updated>2014-05-29T15:14:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2014/05/29/easily-add-acknowledgments-to-your-xcode-projects</id>
    <content type="html"><![CDATA[<p>When you&#8217;re working on a iOS or OSX app, you&#8217;re bound to use a library, framework or other code that was generously shared by other people. The right thing to do (especially when the license requires it!) is to acknowledge that you&#8217;re using their work in your app.</p>

<p>There are various ways to go about this, but I&#8217;ve just released <a href="https://github.com/DangerCove/Acknowledge/">a script called Acknowledge</a> that will make it very easy. It also works very well with <a href="https://github.com/DangerCove/DCOAboutWindow">DCOAboutWindow</a>, which I released earlier.</p>

<div class="thumbnail">
<a href="https://github.com/DangerCove/Acknowledge/"><img src="http://www.dangercove.com/images/content/acknowledge-acknowledgments.jpg" title="Acknowledgments" alt="Acknowledgments"></a>
</div>




<!-- more -->


<p>Acknowledge is a simple bash script that will easily generate a rtf that contains all the acknowledgments for libraries, frameworks and other code you&#8217;ve used in your iOS or OSX project.</p>

<p>It&#8217;s made to work very well with <a href="https://github.com/DangerCove/DCOAboutWindow">DCOAboutWindow</a> and <a href="http://www.cocoapods.org">Cocoapods</a>. Acknowledge relies on <a href="http://fletcherpenney.net/multimarkdown">MultiMarkdown by Fletcher Penny</a>.</p>

<p>You can <a href="https://github.com/DangerCove/Acknowledge/">read more about Acknowledge on GitHub</a>, or follow the setup guide below.</p>

<h2>Clone</h2>

<p>Clone the repo, preferably into the root of your Xcode project:</p>

<pre><code>$ git clone git@github.com:DangerCove/Acknowledge.git
</code></pre>

<p>Or if your project is a repo already, add it as a submodule:</p>

<pre><code>$ git submodule add git@github.com:DangerCove/Acknowledge.git
</code></pre>

<h3>Install multimarkdown</h3>

<p>Follow <a href="http://fletcherpenney.net/multimarkdown/install">the guide</a> on Fletcher&#8217;s website, or if you&#8217;re using homebrew:</p>

<pre><code>$ brew install multimarkdown
</code></pre>

<h3>Configure</h3>

<p>Copy acknowledge.cfg.default to acknowledge.cfg:</p>

<pre><code>$ cd Acknowledge
$ cp acknowledge.cfg.default acknowledge.cfg
</code></pre>

<p>Customize the paths to multimarkdown and your Pods folder if necessary.</p>

<h3>Add acknowledgments</h3>

<p>If you use Cocoapods and have your Pods directory setup, you are ready to go. Just run <code>acknowledge</code>.</p>

<pre><code>$ ./acknowledge
</code></pre>

<h4>Other acknowledgments</h4>

<p>Just add a markdown file to the <code>sources</code> directory and Acknowledge will handle the rest. Make sure the extension is <code>.md</code>.</p>

<h4>Order</h4>

<p>You might&#8217;ve notice the <code>10_</code> and <code>20_</code> prefixes in front of the files in the <code>sources</code> folder. Acknowledge will concatenate the files in order, so just add files and change to number to change the order.</p>

<p>The acknowledgments generated by Cocoapods will always be prepended with <code>10_</code>.</p>

<h3>Potential directory layout</h3>

<pre><code>.
|- Acknowledge/
|   |- acknowledge
|   |- ...
|   |- source/
|   |   |- 11_Vendor.md
|   |   |- 20_Acknowledge.md
|- Pods/
|   |- Pods-acknowledgements.markdown
|-  |- ...
|- Podfile
|- Coolproject.xcodeproj
|- Coolproject.xcworkspace
|- ...
</code></pre>

<h3>Test it</h3>

<p>Don&#8217;t skip this step, you&#8217;ll need to output in the next one.</p>

<p>Open a terminal window and run <code>acknowledge</code> once to see if it works, and to generate the initial <code>Acknowledgments.rtf</code>.</p>

<pre><code>$ ./acknowledge
</code></pre>

<p>Fix any errors and proceed.</p>

<h3>Add it to Xcode</h3>

<p>You&#8217;ll probably want to show the acknowledgments somewhere in your app (have a look at <a href="https://github.com/DangerCove/DCOAboutWindow">DCOAboutWindow</a> if you&#8217;re working on a Mac app, btw).</p>

<p>Simply add the generated <code>Acknowledgments.rtf</code> file to your project and display it somewhere.</p>

<h4>Generate the acknowledgments on each build</h4>

<p>Keeping your acknowledgments up to date is easy if you add Acknowledge as a build phase. Here&#8217;s how that works:</p>

<ol>
<li>Open Xcode;</li>
<li>Select your project and open the <code>Build Phases</code> tab;</li>
<li>Click <code>Editor â†’ Add Build Phase â†’ Add Run Script Build Phase</code>;</li>
<li>Name your script something like &#8220;Update Acknowledgments&#8221; and position it so that it&#8217;s above <code>Copy Bundle Resources</code>;</li>
<li>Now add the following code:</li>
</ol>


<p><code>cd Acknowledge &amp;&amp; ./acknowledge</code></p>

<p>(Make sure to adapt the paths if the script isn&#8217;t located in the default folder.)</p>

<p>It should look something like this:</p>

<div class="thumbnail">
<img src="http://www.dangercove.com/images/content/acknowledge-buildphase.jpg" title="Acknowledge Build Phase" alt="Acknowledge Build Phase">
</div>


<p>That&#8217;s it! Just build your project and you&#8217;re set.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[So much (volume) control]]></title>
    <link href="http://www.dangercove.com/blog/2014/04/02/so-much-volume-control/"/>
    <updated>2014-04-02T10:17:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2014/04/02/so-much-volume-control</id>
    <content type="html"><![CDATA[<div class="thumbnail">
<a href="http://www.getporthole.com"><img src="http://www.dangercove.com/images/content/porthole-volumecontrol.jpg" title="Porthole Volume Control" alt="Porthole Volume Control"></a>
</div>


<p>Porthole&#8217;s main volume control has always been the buttons on the keyboard. Pressing F10 will mute everything, F11 lowers it and F12 turns it up. Just as you&#8217;d expect when looking at the little icons on the keys, really.</p>

<!-- more -->


<p>Sometimes this isn&#8217;t enough. Looking at the amount of votes this got on the <a href="http://porthole.uservoice.com/forums/151703-general/suggestions/3661146-adjust-airplay-devices-audio-levels-individually">suggestion page</a>, for quite a few people this wasn&#8217;t enough. If you have a great deal of speakers around your home (or one that&#8217;s particularly obnoxious, volume wise) being able to set a specific volume becomes important.</p>

<p>This posed a design challenge, more than a technical one. I frankly didn&#8217;t feel comfortable adding an undetermined number of sliders to the interface. Porthole&#8217;s main focus has always been elegance and ease of use. That doesn&#8217;t mix well with a row of sliders, trust me. Also, I didn&#8217;t want to give up the use of the volume keys.</p>

<p>After some consideration and tests, I came up with something that works. There are sliders, but they aren&#8217;t in the main interface and they control the volume, but not in a way that conflicts with the volume keys. Instead of setting the volume absolutely, the sliders determine an offset, that&#8217;s why you can set a negative number.</p>

<p>In practice, this works as follows: Say the main volume is at 5, one speaker has a -2 offset, the other +4. This means the absolute volume for speaker one is 3 and for the other 9. Pressing the volume keys to turn up the volume by 1, sets the speakers to 4 and 10 respectively.</p>

<p>This might take a bit to get used to, but I&#8217;ve found it works very very well. Especially because all volume preferences are saved per speaker.</p>

<p>Want to take this for a spin? Just <a href="http://www.getporthole.com/download">download version 1.6.0 or higher</a>!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VLC 2.1.3 fixes AirPlay trouble]]></title>
    <link href="http://www.dangercove.com/blog/2014/02/19/vlc-2-dot-1-3-fixes-airplay-trouble/"/>
    <updated>2014-02-19T15:13:00+01:00</updated>
    <id>http://www.dangercove.com/blog/2014/02/19/vlc-2-dot-1-3-fixes-airplay-trouble</id>
    <content type="html"><![CDATA[<p>In the first two releases of VLC 2.1.x, AirPlay wasn&#8217;t working like it&#8217;s supposed to. I even <a href="http://www.dangercove.com/blog/2013/11/13/airvlc-v-dot-1-1-dot-1/">recommended</a> to stay on 2.0.8 if you wanted to use <a href="http://www.dangercove.com/airvlc">AirVLC</a>.</p>

<p>With the recent release of version 2.1.3 all problems seem to have been fixed and AirVLC is compatible out of the box! You can update VLC from within the app, or <a href="http://www.videolan.org/vlc/">through their website</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grab content from a web browser in your Mac app]]></title>
    <link href="http://www.dangercove.com/blog/2014/01/27/grab-content-from-a-web-browser-in-your-mac-app/"/>
    <updated>2014-01-27T15:43:00+01:00</updated>
    <id>http://www.dangercove.com/blog/2014/01/27/grab-content-from-a-web-browser-in-your-mac-app</id>
    <content type="html"><![CDATA[<p>One of my favorite features of <a href="http://www.dangercove.com/tapetrap">Tapetrap</a> is its ability to subscribe to a website while surfing the web with your browser. Instead of looking for the RSS feed manually and copy-pasting the link, you can click a button and Tapetrap will find and add the feed for you. In this article I want to go over why I think that&#8217;s awesome and how it works. The source code for the URL grabbing is <a href="https://github.com/DangerCove/DCOURLGrabber">available on GitHub</a>.</p>

<div class="thumbnail">
<iframe width="620" height="349" src="http://www.dangercove.com//www.youtube.com/embed/zzoGEhWTXRw?rel=0&amp;vq=hd720" allowfullscreen></iframe>
<div class="caption">
Adding feeds from your web browser in Tapetrap
</div>
</div>




<!-- more -->


<h2>Not a browser plugin</h2>

<p>I&#8217;ve <a href="https://chrome.google.com/webstore/detail/treasure-chest-radio-3fm/geeoeokcenpaehoemkfdjfmnobopefck">made</a> and use a few browser extensions. They&#8217;re neat little applications that take an insane amount of work to maintain. While some code can be shared you will need to tailer parts of the extension for each browser specifically.</p>

<p>For Tapetrap, I chose to make a system wide browser extension in the form of an icon in the menu bar that &#8220;just works&#8221; with the active web browser when clicked. This means users don&#8217;t have to install anything extra and I don&#8217;t have to create a plugin per browser. I can&#8217;t say I&#8217;m the first one to do something like this, but it works particularly well for Tapetrap.</p>

<div class="thumbnail">
<img src="http://www.dangercove.com/images/content/tapetrap-ss-menubar.jpg" title="Add Feeds While Surfing the Web" alt="Add Feeds While Surfing the Web">
</div>


<p>Of course there are downsides to using this approach too. It&#8217;s impossible to manipulate the DOM inside the browser or execute other more context aware methods. It&#8217;s fine for getting basic information, though.</p>

<h2>How grabbing works</h2>

<p>This is where it gets a little technical. I combined a basic menu bar app with my own URL grabber code, called <a href="https://github.com/DangerCove/DCOURLGrabber">DCOURLGrabber</a>, to get the URL from the web browser that was last active.</p>

<p>I&#8217;ll skip the menu bar icon part. There are plenty of <a href="http://kmikael.com/2013/07/01/simple-menu-bar-apps-for-os-x/">good tutorial</a>s that explain all you need. Instead I&#8217;ll talk about how to interact with the web browser.</p>

<h3>AppleScript</h3>

<p>Yep, AppleScript. Often used to automate tedious tasks, it&#8217;s also a great way to interface with other applications. For DCOURLGrabber I focussed on getting the URL from the selected tab of the key window of the web browser that was last active. This is the AppleScript for getting the URL in Google Chrome:</p>

<figure class='code'><figcaption><span>Grab URL From Chrome</span><a href='https://github.com/DangerCove/DCOURLGrabber/raw/master/AppleScripts/com.google.Chrome.scpt'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='applescript'><span class='line'><span class="k">tell</span> <span class="nb">application</span> <span class="s2">&quot;Google Chrome&quot;</span>
</span><span class='line'>  <span class="k">get</span> <span class="nv">URL</span> <span class="k">of</span> <span class="na">active</span> <span class="no">tab</span> <span class="k">of</span> <span class="nb">first</span> <span class="na">window</span>
</span><span class='line'><span class="k">end</span> <span class="k">tell</span>
</span></code></pre></td></tr></table></div></figure>


<p>Simple enough right? For <a href="https://github.com/DangerCove/DCOURLGrabber/tree/master/AppleScripts">Safari and Opera</a> the command are very similar. The one for Firefox is a little longer.</p>

<figure class='code'><figcaption><span>Grab URL From Firefox</span><a href='https://github.com/DangerCove/DCOURLGrabber/raw/master/AppleScripts/org.mozilla.firefox.scpt'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='applescript'><span class='line'><span class="k">tell</span> <span class="nb">application</span> <span class="s2">&quot;Firefox&quot;</span> <span class="k">to</span> <span class="nb">activate</span>
</span><span class='line'><span class="k">tell</span> <span class="nb">application</span> <span class="s2">&quot;System Events&quot;</span>
</span><span class='line'>  <span class="nv">keystroke</span> <span class="s2">&quot;l&quot;</span> <span class="nv">using</span> <span class="nv">command</span> <span class="nv">down</span>
</span><span class='line'>  <span class="nv">keystroke</span> <span class="s2">&quot;c&quot;</span> <span class="nv">using</span> <span class="nv">command</span> <span class="nv">down</span>
</span><span class='line'><span class="k">end</span> <span class="k">tell</span>
</span><span class='line'><span class="nb">delay</span> <span class="mf">0.5</span>
</span><span class='line'><span class="nb">the clipboard</span>
</span></code></pre></td></tr></table></div></figure>


<p>Hopefully they&#8217;ll switch to a straightforward approach in a future update. In any case, after running these scripts they present the current URL of the browser window.</p>

<h3>Objective-C</h3>

<p>To run this in Objective-C, create a new Mac project in XCode, paste in the next piece of code in the <code>applicationDidFinishLaunching:</code> method and that&#8217;s it.</p>

<figure class='code'><figcaption><span>Get URL From Chrome in Objective-C</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// The script to run. You could also load this from a file as in DCOURLGrabber</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">chromeScript</span> <span class="o">=</span>
</span><span class='line'><span class="s">@&quot;tell application </span><span class="se">\&quot;</span><span class="s">Google Chrome</span><span class="se">\&quot;\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="s">&quot;  get URL of active tab of first window</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="s">&quot;end tell&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Load the script</span>
</span><span class='line'><span class="n">NSAppleScript</span> <span class="o">*</span><span class="n">script</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSAppleScript</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithSource:</span><span class="n">chromeScript</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Grab URL using AppleScript</span>
</span><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">scriptExecuteError</span><span class="p">;</span>
</span><span class='line'><span class="n">NSAppleEventDescriptor</span> <span class="o">*</span><span class="n">result</span> <span class="o">=</span> <span class="p">[</span><span class="n">script</span> <span class="nl">executeAndReturnError:</span><span class="o">&amp;</span><span class="n">scriptExecuteError</span><span class="p">];</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="n">scriptExecuteError</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Failed</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Error: %@&quot;</span><span class="p">,</span> <span class="n">scriptExecuteError</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Output: %@&quot;</span><span class="p">,</span> <span class="n">result</span><span class="p">.</span><span class="n">stringValue</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Using DCOURLGrabber it becomes even easier. Check the <a href="https://github.com/DangerCove/DCOURLGrabber">GitHub page</a> for more documentation.</p>

<figure class='code'><figcaption><span>Get URL From Chrome in Objective-C Using DCOURLGrabber</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">DCOURLGrabber</span> <span class="o">*</span><span class="n">grabber</span> <span class="o">=</span> <span class="p">[[</span><span class="n">DCOURLGrabber</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="n">grabber</span> <span class="nl">grabURLFromBundleID:</span><span class="s">@&quot;com.google.Chrome&quot;</span> <span class="nl">withError:</span><span class="o">&amp;</span><span class="n">grabError</span><span class="p">];</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="n">grabError</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Failed to retrieve URL: %@&quot;</span><span class="p">,</span> <span class="n">grabError</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Got URL: %@&quot;</span><span class="p">,</span> <span class="n">url</span><span class="p">.</span><span class="n">absoluteString</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Getting the RSS/Atom URL</h2>

<p>Websites that value their feeds will link to it from their website. Not only with the well-known orange button, but also through a meta tag in the source code of the website. This gives apps like Tapetrap a way of retrieving it.</p>

<p>The GameKings website has this setup correctly. Inspecting the source of <a href="http://gamekings.tv">http://gamekings.tv</a> reveals the following lines near the top of the document.</p>

<figure class='code'><figcaption><span>Get URL From Chrome in Objective-C Using DCOURLGrabber</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="o">&lt;</span><span class="n">link</span> <span class="n">rel</span><span class="o">=</span><span class="s">&quot;alternate&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s">&quot;application/rss+xml&quot;</span> <span class="n">title</span><span class="o">=</span><span class="s">&quot;RSS 2.0&quot;</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;http://www.gamekings.tv/feed/&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">link</span> <span class="n">rel</span><span class="o">=</span><span class="s">&quot;alternate&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s">&quot;text/xml&quot;</span> <span class="n">title</span><span class="o">=</span><span class="s">&quot;RSS .92&quot;</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;http://www.gamekings.tv/feed/rss/&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">link</span> <span class="n">rel</span><span class="o">=</span><span class="s">&quot;alternate&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s">&quot;application/atom+xml&quot;</span> <span class="n">title</span><span class="o">=</span><span class="s">&quot;Atom 1.0&quot;</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;http://www.gamekings.tv/feed/atom/&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">link</span> <span class="n">rel</span><span class="o">=</span><span class="s">&quot;alternate&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s">&quot;application/rss+xml&quot;</span> <span class="n">title</span><span class="o">=</span><span class="s">&quot;Gamekings Video&#39;s RSS Feed&quot;</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;http://www.gamekings.tv/rss?cat=3&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">link</span> <span class="n">rel</span><span class="o">=</span><span class="s">&quot;alternate&quot;</span> <span class="n">type</span><span class="o">=</span><span class="s">&quot;application/rss+xml&quot;</span> <span class="n">title</span><span class="o">=</span><span class="s">&quot;Gamekings Nieuws RSS Feed&quot;</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;http://www.gamekings.tv/rss?cat=18&quot;</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>All links point to RSS feeds. There are some similarities between the lines. Using these conventions, it&#8217;s easy to extract them in code. Even easier with <a href="https://github.com/tracy-e/OCGumbo">OCGumbo</a>, which is a HTML5 parser. It converts RSS into Objective-C objects.</p>

<p>The following lines of code parse a simple HTML page, check the &#8216;type&#8217; parameter of the &#8216;link&#8217; meta tag for either application/rss+xml, application/atom+xml, rss+xml or atom+xml and log the link when it matches.</p>

<figure class='code'><figcaption><span>Log the Link to a RSS Feed Found in the Head</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Create an array that contains the strings that can appear in the &#39;type&#39; property</span>
</span><span class='line'><span class="n">NSArray</span> <span class="o">*</span><span class="n">linkTypeFeedIndicators</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span><span class="s">@&quot;application/rss+xml&quot;</span><span class="p">,</span> <span class="s">@&quot;application/atom+xml&quot;</span><span class="p">,</span> <span class="s">@&quot;rss+xml&quot;</span><span class="p">,</span> <span class="s">@&quot;atom+xml&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">htmlString</span> <span class="o">=</span>
</span><span class='line'><span class="s">@&quot;&lt;html&gt;&lt;head&gt;&quot;</span>
</span><span class='line'><span class="s">&quot;&lt;link rel=&#39;alternate&#39; type=&#39;application/rss+xml&#39; title=&#39;RSS 2.0&#39; href=&#39;http://www.gamekings.tv/feed/&#39; /&gt;&quot;</span>
</span><span class='line'><span class="s">&quot;&lt;/head&gt;&lt;body&gt;&quot;</span>
</span><span class='line'><span class="s">&quot;&lt;h1&gt;Feed discovery experiment&lt;/h1&gt;&quot;</span>
</span><span class='line'><span class="s">&quot;&lt;p&gt;Just testing ;).&lt;/p&gt;&quot;</span>
</span><span class='line'><span class="s">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Load the document from a string containing HTML</span>
</span><span class='line'><span class="n">OCGumboDocument</span> <span class="o">*</span><span class="n">document</span> <span class="o">=</span> <span class="p">[[</span><span class="n">OCGumboDocument</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithHTMLString:</span><span class="n">htmlString</span><span class="p">];</span>
</span><span class='line'><span class="n">OCGumboElement</span> <span class="o">*</span><span class="n">root</span> <span class="o">=</span> <span class="n">document</span><span class="p">.</span><span class="n">rootElement</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Loop through all &#39;link&#39; tags</span>
</span><span class='line'><span class="p">[</span><span class="n">root</span><span class="p">.</span><span class="n">Query</span><span class="p">(</span><span class="s">@&quot;link&quot;</span><span class="p">)</span> <span class="nl">enumerateObjectsUsingBlock:</span><span class="o">^</span><span class="p">(</span><span class="n">OCGumboElement</span> <span class="o">*</span><span class="n">element</span><span class="p">,</span> <span class="n">NSUInteger</span> <span class="n">idx</span><span class="p">,</span> <span class="kt">BOOL</span> <span class="o">*</span><span class="n">stop</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">type</span> <span class="o">=</span> <span class="p">[</span><span class="n">element</span><span class="p">.</span><span class="n">attr</span><span class="p">(</span><span class="s">@&quot;type&quot;</span><span class="p">)</span> <span class="n">stringByRemovingNewLinesAndWhitespace</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Check if the type is equal to that of a RSS/Atom feed</span>
</span><span class='line'>    <span class="k">if</span><span class="p">([</span><span class="n">linkTypeFeedIndicators</span> <span class="nl">containsObject:</span><span class="n">type</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">NSString</span> <span class="o">*</span><span class="n">feedURLString</span> <span class="o">=</span> <span class="n">element</span><span class="p">.</span><span class="n">attr</span><span class="p">(</span><span class="s">@&quot;href&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Found a feed: %@&quot;</span><span class="p">,</span> <span class="n">feedURLString</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure>


<p>With the URL of the RSS feed in hand, the road is clear to analyze its content using a RSS parser, or maybe use the URL for something different entirely.</p>

<h2>Real world example</h2>

<p>You can <a href="http://www.dangercove.com/tapetrap">download Tapetrap</a> to get a feel of how this works. The app is now in public beta and free to use. Also let me know what you think and help improve it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I Love Watching Web Videos]]></title>
    <link href="http://www.dangercove.com/blog/2014/01/25/i-love-watching-web-videos/"/>
    <updated>2014-01-25T11:40:00+01:00</updated>
    <id>http://www.dangercove.com/blog/2014/01/25/i-love-watching-web-videos</id>
    <content type="html"><![CDATA[<div class="thumbnail">
<a href="http://www.dangercove.com/tapetrap"><img src="http://www.dangercove.com/images/content/tapetrap-header.jpg" title="Tapetrap Header" alt="Tapetrap Header"></a>
</div>


<p>Online videos are my favorite work break. I might watch an episode of Star Trek TNG during lunch, but I watch far more online videos while I wait for some stuff to compile or just to take my mind off what I&#8217;m doing.</p>

<p><a href="http://www.dangercove.com/tapetrap">Tapetrap</a> makes sure I spend less time searching and more time watching these videos. I use it daily and love how it works. Now I need your help to make it even better.</p>

<!-- more -->


<p>The videos I like to watch aren&#8217;t available from a single website. YouTube has a lot, but definitly not everything. Maybe even less in the future, with the <a href="http://www.forbes.com/sites/insertcoin/2013/12/11/youtube-unleashes-strange-storm-of-copyright-claims-on-video-game-content-producers/">copyright claims</a> a lot of video game oriented channels had to deal with lately. I wanted to get away from browsing to every single website independently, deciding what I wanted to watch and then forgetting which clips I had already seen. Or making an account for every site to overcome that last problem.</p>

<div class="thumbnail">
<a href="http://www.dangercove.com/images/content/tapetrap-ss-browse.jpg" target="_blank"><img src="http://www.dangercove.com/images/content/tapetrap-ss-browse.jpg" title="Browsing in Tapetrap" alt="Browsing in Tapetrap"></a>
</div>


<p>Tapetrap will hold all my favorite sites, make it easy to add new ones, play videos and remembers which I&#8217;ve already seen. When I have 5-30 minutes to spare, it gives me a quick overview of what&#8217;s available and ten seconds later I&#8217;m watching a video. I don&#8217;t even have to check where I left off if it&#8217;s a series. It&#8217;s pretty awesome really.</p>

<p>Especially while Tapetrap&#8217;s in beta, I&#8217;m looking for ways to improve the experience and add features. If you&#8217;re like me and follow a bunch of skateboarding channels on YouTube, TED Talks, Funny or Die, Artsy Vimeo Channels, Spoony etc. etc., <a href="http://www.dangercove.com/tapetrap">download Tapetrap</a> and <a href="mailto:support@dangercove.com?subject=Tapetrap%20Feedback">let me know what you think</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AirVLC v.1.1.1, still better with VLC 2.0.x]]></title>
    <link href="http://www.dangercove.com/blog/2013/11/13/airvlc-v-dot-1-1-dot-1/"/>
    <updated>2013-11-13T13:33:00+01:00</updated>
    <id>http://www.dangercove.com/blog/2013/11/13/airvlc-v-dot-1-1-dot-1</id>
    <content type="html"><![CDATA[<p>It feels like an update for AirVLC has been overdue. Even though it&#8217;s been working very well for me and even made the transition to Mavericks like it was nothing.</p>

<!-- more -->


<p>The changes in this update are mostly behind the scenes; I updated the frameworks and project to work with Xcode 5. Besides that I&#8217;ve made some tweaks to accomodate a few changes Videolan made in VLC 2.1.0.</p>

<p>Unfortunately there is no way to test if those changes work yet, because the AirPlay support in 2.1.x still seems to be completely broken. Even in the nightly builds. So if you intend to use AirVLC to watch your movies on your Mac and play the audio in sync over AirPlay, stick to <a href="http://vlc.airvlc.com/download">VLC 2.0.9</a> or <a href="http://vlc.airvlc.com/downgrade">downgrade</a> if you&#8217;ve updated already.</p>

<div class="text-center">
<a href="http://www.dangercove.com/airvlc" class="btn btn-large btn-success">Get AirVLC!</a>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Glow for updates]]></title>
    <link href="http://www.dangercove.com/blog/2013/10/23/glow-for-updates/"/>
    <updated>2013-10-23T17:17:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2013/10/23/glow-for-updates</id>
    <content type="html"><![CDATA[<p>Everybody knows software updates. A window pops up to notify you an update is available,
you accept and a few seconds later you have new features (and less bugs, hopefully).</p>

<p>Automatic software updates are great and generally make everybody&#8217;s lives
better. As a developer I can be sure most of my customers are using the latest
version. As a user you press a single button to update, instead of going to
the website, downloading a new package and overwriting the previous version.</p>

<p>All Danger Cove apps (except the ones on the App Store) use <a href="http://sparkle.andymatuschak.org/">Sparkle</a>
for automatic updates. Sparkle checks a feed every day and lets you know when a
new version is available. Getting that feed online is what I want to talk about
today.</p>

<!-- more -->


<p>Previously I manually edited these feeds and manually wrote the <a href="http://update.getporthole.com/release_notes/?source=article">release
notes</a> in a text
editor. Knowing that I have to look up version numbers, file sizes and sign the
update (for security, nobody should be able to release an update in my name).
This can take some time.</p>

<p>That&#8217;s why I&#8217;ve made <a href="https://github.com/DangerCove/Glow">Glow</a> and if you&#8217;re a
software developer, it might come in handy for you as well. That&#8217;s why I&#8217;ve
released it on GitHub. Here&#8217;s my description of it.</p>

<blockquote><p>Glow is a tool that generates Sparkle-compatible Appcast update feeds and html release notes for your Mac projects. It&#8217;s not a full blown, database driven, multiple project supporting, update releasing laser canon. Rather it&#8217;s a clean, easy to use script that will automate 90% of releasing updates to your users.</p></blockquote>

<p>The <a href="https://github.com/DangerCove/Glow">GitHub page</a> contains a very detailed
walkthrough on how to get started.</p>

<p>Automating the process of creating these updates leaves more time to work on
fixing bugs and adding cool new features. Also, I might have some more time to
style those release notes :).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mavericks]]></title>
    <link href="http://www.dangercove.com/blog/2013/10/23/mavericks/"/>
    <updated>2013-10-23T10:12:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2013/10/23/mavericks</id>
    <content type="html"><![CDATA[<p>Apple released <a href="https://itunes.apple.com/app/os-x-mavericks/id675248567">OS X version 10.9</a> yesterday. It&#8217;s a free update and I think
most of you will want to upgrade as soon as you get the chance.</p>

<p>All Danger Cove apps have been tested and work with OS X Mavericks. So, don&#8217;t let
Porthole, AirVLC, coucou or Reign hold you back and have fun checking out all new
features Apple&#8217;s added!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keep track of your web video feeds with Tapetrap]]></title>
    <link href="http://www.dangercove.com/blog/2013/10/21/keep-track-of-your-web-video-feeds-with-tapetrap/"/>
    <updated>2013-10-21T14:52:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2013/10/21/keep-track-of-your-web-video-feeds-with-tapetrap</id>
    <content type="html"><![CDATA[<p>If you&#8217;re anything like me, you spend quite some time reading, listening to and
watching various things online. It would be impossible to organize all this
information without the use of a few excellent apps, like Reeder for news
and Instacast for podcasts.</p>

<p>Web videos are harder to manage. Despite popular believe, not everything is
available on YouTube or Vimeo. In need of a dedicated tool to keep up with online videos,
no matter where they&#8217;re hosted, I&#8217;ve made a brand new app!</p>

<!-- more -->




<div class="thumbnail">
<a href="http://www.dangercove.com/tapetrap/">
  <img src="http://www.dangercove.com/images/content/tapetrap-banner.jpg" title="Keep track of your web video feeds with Tapetrap" alt="Keep track of your web video feeds with Tapetrap">
</a>
</div>


<p>Tapetrap will give you instant access to your favorite webisodes, lets you know when
a new item comes out and keeps track of which you&#8217;ve seen.</p>

<p>For me, this means I can watch VICE, Zero Punctuation, the AVGN, Conan&#8217;s
Clueless Gamer, the Spoony Experiment, Gamekings, Christopher Walkenthrough, TED talks and Uitzending
Gemist all in one app.</p>

<p>It&#8217;s been in development for the past month and, not too tease you too much, is
working great! That said, it&#8217;s not done yet. I still want to polish a
few features before putting out a public version. Until then, <a href="http://www.dangercove.com/tapetrap/">subscribe to the mailing list</a>
to stay up to date and help testing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It's Danger Cove's Birthday!]]></title>
    <link href="http://www.dangercove.com/blog/2013/10/01/its-danger-coves-birthday/"/>
    <updated>2013-10-01T09:13:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2013/10/01/its-danger-coves-birthday</id>
    <content type="html"><![CDATA[<p>I&#8217;m writing this from my studio in The Hague. It&#8217;s been quite an adventure from
when Danger Cove started October first 2011. An expedition that delivered <a href="http://www.dangercove.com">four
released apps</a>, one in progress (more on that in a
future post) and a whole bunch of projects that looked cool at first, but now live in a folder called &#8220;shelved&#8221; ;).</p>

<!-- more -->




<div class="thumbnail">
<a href="http://www.dangercove.com/">
  <img src="http://www.dangercove.com/images/content/dangercove-two.jpg" title="Danger Cove turns two today! Porthole and AirVLC are 40% off to celebrate!" alt="Danger Cove turns two today! Porthole and AirVLC are 40% off to celebrate!">
</a>
</div>


<p>It feels awesome that Danger Cove apps are being used by more people than I could
hope for. Thanks so much to the wonderful people that took the time to spread
the word about them. I appreciate it a lot.</p>

<p>To celebrate, both <a href="http://www.getporthole.com">Porthole</a> and
<a href="http://www.dangercove.com/airvlc">AirVLC</a> are 40% off today! I assume you
already got that from the header image though. The offer will end October
2nd at 12pm CET.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Update Porthole to restore Apple TV compatibility]]></title>
    <link href="http://www.dangercove.com/blog/2013/09/26/update-porthole-to-restore-apple-tv-compatibility/"/>
    <updated>2013-09-26T10:14:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2013/09/26/update-porthole-to-restore-apple-tv-compatibility</id>
    <content type="html"><![CDATA[<p>I just released Porthole v1.4.4 which restores compatibility with the Apple TV.
Apple&#8217;s latest update for the little black device changed some AirPlay protocol
related things that stopped quite a few third-party AirPlay audio apps to work.
The update makes sure Porthole plays by the new rules.</p>

<!-- more -->


<p>Putting out a fix came sooner than expected, very much thanks to Jason from
<a href="http://industriousone.com/">Industrious One</a> who found the solution and Quentin
over at <a href="http://www.rogueamoeba.com/">Rogue Amoeba</a> who mentioned Jason&#8217;s
fix to be &#8220;very very simple&#8221;, which in turn pointed me in the right direction :).</p>

<p>Have a look at their websites and products, both make excellent apps!
Especially if you&#8217;re into listening to music or work with audio.</p>

<p>To update to the latest version of Porthole, Check for Updates in-app or
<a href="http://www.getporthole.com/download">download the latest version</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apple TV v6.0 Update Warning]]></title>
    <link href="http://www.dangercove.com/blog/2013/09/22/apple-tv-v6-dot-0-update-warning/"/>
    <updated>2013-09-22T14:04:00+02:00</updated>
    <id>http://www.dangercove.com/blog/2013/09/22/apple-tv-v6-dot-0-update-warning</id>
    <content type="html"><![CDATA[<p><strong>This issue has been resolved. Update Porthole to restore compatibility. Read the <a href="http://www.dangercove.com/blog/2013/09/26/update-porthole-to-restore-apple-tv-compatibility/">follow up</a> for more details.</strong></p>

<p>The latest Apple TV firmware (version 6.0) adds a new layer of mandatory encryption for audio playback that wasn&#8217;t required before. This currently prevents unofficial audio based AirPlay apps to work like they used to.</p>

<!-- more -->


<p>I&#8217;m looking into the issue and trying to figure out a solution, if there is one. This requires some research and it might take a while to find a way around the encryption.</p>

<p><strong>The best thing to do at the moment, is to not update your Apple TV to the latest version if you want to stream to it using Porthole</strong>. To stay up to date, follow <a href="http://twitter.com/getporthole">@getporthole</a> on Twitter. Sorry for the inconvenience.</p>

<p>Note that Apple TV&#8217;s running 5.3 or below and other AirPlay speakers are unaffected.</p>
]]></content>
  </entry>
  
</feed>
